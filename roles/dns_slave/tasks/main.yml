---
- name: Install dns packages
  pacman:
    name: [ 'bind', 'bind-tools', 'icu' ]
    update_cache: yes
  when: ansible_distribution == "Archlinux"

- name: Create chrooted dirs for dns server
  file:
    path: "{{ item }}"
    owner: "{{ bind_user }}"
    group: "{{ bind_group }}"
    state: directory
  with_items:
    - "{{ bind_chroot_dir }}{{ bind_chroot_etc_dir }}"
    - "{{ bind_chroot_dir }}{{ bind_chroot_dev_dir }}"
    - "{{ bind_chroot_dir }}{{ bind_chroot_lib_dir }}"
    - "{{ bind_chroot_dir }}{{ bind_chroot_usr_lib_dir }}"
    - "{{ bind_chroot_dir }}{{ bind_chroot_sbin_dir }}"
    - "{{ bind_chroot_dir }}{{ bind_chroot_cache_dir }}"
    - "{{ bind_chroot_dir }}{{ bind_chroot_run_dir }}"

- name: Copy over required system files
  command: cp -dpR "{{ item.src }}" "{{ item.dest }}"
  with_items:
    - { src: /etc/localtime, dest: "{{ bind_chroot_dir }}/etc" }
    - { src: /usr/lib/engines-1.1, dest: "{{ bind_chroot_dir }}/usr/lib/engines-1.1" }
    - { src: /var/named, dest: "{{ bind_chroot_dir }}/var/named" }

- name: mknod devices in chrooted dir
  command: mknod -m 0660 "{{ item.dev }}" c "{{ item.major }}" "{{ item.minor }}"
  args:
    creates: "{{ item.dev }}"
  with_items:
    - { dev: "{{ bind_chroot_dir }}/dev/null", major: '1', minor: '3'}
    - { dev: "{{ bind_chroot_dir }}/dev/random", major: '1', minor: '8'}

- name: Change ownership for chroot dir
  file:
    path: "{{ bind_chroot_dir }}"
    state: directory
    recurse: yes
    owner: "{{ bind_user }}"
    group: "{{ bind_group }}"

- name: Copy service bind file
  template:
    src: named.service.j2
    dest: /etc/systemd/system/named.service
    owner: root
    group: root
    mode: 0640

- name: Enable bind service
  systemd:
    name: named
    enabled: yes

- name: Copy main bind config file
  template:
    src: named.conf.j2
    dest: "{{ bind_chroot_dir }}{{ bind_chroot_etc_dir }}/named.conf"
    owner: "{{ bind_user }}"
    group: "{{ bind_group }}"
    mode: 0640
  notify:
    - Restart dns server

#- name: Create a symlink to original bind dir
#file:
#src: "{{ bind_chroot_dir }}/etc/bind"
#path: /etc/bind
#owner: 0
#group: "{{ bind_group }}"
#state: link
#
#- name: Copy localtime
#command: "cp /etc/localtime {{ bind_chroot_dir}}/etc/"
#args:
#creates: "{{ bind_chroot_dir }}/etc/localtime"
#
#- name: Copy dns config files
#template:
#src: "{{ item }}.j2"
#dest: "/etc/bind/{{ item }}"
#owner: root
#group: bind
#mode: 0640
#with_items:
#- named.conf.options
#- named.conf.local
#notify:
#- Restart dns server
#
#- name: Copy dns key file
#copy:
#src: dns_key.key
#dest: "{{ dns_key_file_path }}"
#owner: root
#group: bind
#mode: 0440
#notify:
#- Restart dns server
#
#- name: Allow DNS UDP port for IPv4
#iptables_raw:
#name: "dns_udp_port_ipv4"
#table: "filter"
#weight: 15
#ipversion: 4
#keep_unmanaged: no
#rules: "-A INPUT -p udp -m udp --dport 53 -m state --state NEW -j ACCEPT"
#
#- name: Allow DNS TCP port for IPv4
#iptables_raw:
#name: "dns_tcp_port_ipv4"
#table: "filter"
#weight: 16
#ipversion: 4
#keep_unmanaged: no
#rules: "-A INPUT -p tcp -m tcp --dport 53 --tcp-flags FIN,SYN,RST,ACK SYN -m state --state NEW -j ACCEPT"
#
#- name: Allow DNS UDP port for IPv6
#iptables_raw:
#name: "dns_udp_port_ipv6"
#table: "filter"
#weight: 15
#ipversion: 6
#keep_unmanaged: no
#rules: "-A INPUT -p udp -m udp --dport 53 -m state --state NEW -j ACCEPT"
#
#- name: Allow DNS TCP port for IPv6
#iptables_raw:
#name: "dns_tcp_port_ipv6"
#table: "filter"
#weight: 16
#ipversion: 6
#keep_unmanaged: no
#rules: "-A INPUT -p tcp -m tcp --dport 53 --tcp-flags FIN,SYN,RST,ACK SYN -m state --state NEW -j ACCEPT"
...
