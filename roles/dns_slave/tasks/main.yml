---
- name: Install dns packages
  apt:
    name: "{{ item }}"
    update_cache: yes
  with_items:
    - bind9
    - dnsutils

- name: Set chroot dir for dns server
  replace:
    path: /etc/default/bind9
    regexp: '^OPTIONS="-u bind"$'
    replace: 'OPTIONS="-u {{ bind_user }} -t {{ bind_chroot_dir }}"'

- name: Create chrooted dirs for dns server
  file:
    path: "{{ item }}"
    owner: "{{ bind_user }}"
    group: "{{ bind_group }}"
    state: directory
  with_items:
    - "{{ bind_chroot_dir }}/etc"
    - "{{ bind_chroot_dir }}/dev"
    - "{{ bind_chroot_dir }}/lib"
    - "{{ bind_chroot_dir }}/usr/sbin"
    - "{{ bind_chroot_dir }}/var/cache/bind"
    - "{{ bind_chroot_dir }}/var/run"

- name: mknod devices in chrooted dir
  command: mknod -m 0660 "{{ item.dev }}" c "{{ item.major }}" "{{ item.minor }}"
  args:
    creates: "{{ item.dev }}"
  with_items:
    - { dev: "{{ bind_chroot_dir }}/dev/null", major: '1', minor: '3'}
    - { dev: "{{ bind_chroot_dir }}/dev/random", major: '1', minor: '8'}

- name: Move original bind config dir to the chrooted one
  command: "mv /etc/bind {{ bind_chroot_dir }}/etc"
  args:
    creates: "{{ bind_chroot_dir }}/etc/bind"

- name: Create a symlink to original bind dir
  file:
    src: "{{ bind_chroot_dir }}/etc/bind"
    path: /etc/bind
    owner: 0
    group: "{{ bind_group }}"
    state: link

- name: Copy localtime
  command: "cp /etc/localtime {{ bind_chroot_dir}}/etc/"
  args:
    creates: "{{ bind_chroot_dir }}/etc/localtime"

- name: Copy dns config files
  template:
    src: "{{ item }}.j2"
    dest: "/etc/bind/{{ item }}"
    owner: root
    group: bind
    mode: 0640
  with_items:
    - named.conf.options
    - named.conf.local
  notify:
    - Restart dns server

- name: Copy dns key file
  copy:
    src: dns_key.key
    dest: "{{ dns_key_file_path }}"
    owner: root
    group: bind
    mode: 0440
  notify:
    - Restart dns server

- name: Allow DNS UDP port for IPv4
  iptables_raw:
    name: "dns_udp_port_ipv4"
    table: "filter"
    weight: 15
    ipversion: 4
    keep_unmanaged: no
    rules: "-A INPUT -p udp -m udp --dport 53 -m state --state NEW -j ACCEPT"

- name: Allow DNS TCP port for IPv4
  iptables_raw:
    name: "dns_tcp_port_ipv4"
    table: "filter"
    weight: 16
    ipversion: 4
    keep_unmanaged: no
    rules: "-A INPUT -p tcp -m tcp --dport 53 --tcp-flags FIN,SYN,RST,ACK SYN -m state --state NEW -j ACCEPT"

- name: Allow DNS UDP port for IPv6
  iptables_raw:
    name: "dns_udp_port_ipv6"
    table: "filter"
    weight: 15
    ipversion: 6
    keep_unmanaged: no
    rules: "-A INPUT -p udp -m udp --dport 53 -m state --state NEW -j ACCEPT"

- name: Allow DNS TCP port for IPv6
  iptables_raw:
    name: "dns_tcp_port_ipv6"
    table: "filter"
    weight: 16
    ipversion: 6
    keep_unmanaged: no
    rules: "-A INPUT -p tcp -m tcp --dport 53 --tcp-flags FIN,SYN,RST,ACK SYN -m state --state NEW -j ACCEPT"
...
